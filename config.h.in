// This file is part of the casycom project
//
// Copyright (c) 2015 by Mike Sharov <msharov@users.sourceforge.net>
// This file is free software, distributed under the ISC license.
//
// config.h generated by configure
#pragma once

// Define to the one symbol short name of this package.
#define @pkg_uname@_NAME		"@pkg_name@"
// Define to the version of this package.
#define @pkg_uname@_VERSION		@pkg_version@
// Define to the version string of this package.
#define @pkg_uname@_VERSTRING	"@pkg_verstr@"
// Define to the address where bug reports for this package should be sent.
#define @pkg_uname@_BUGREPORT	"@pkg_bugreport@"

// Using GNU-specific glibc features
#define _GNU_SOURCE

// Common includes
#include <assert.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>
#include <errno.h>

// gcc attribute shortcuts
#define PRINTFARGS(fmt,args)    __attribute__((__format__(__printf__,fmt,args)))
#define CONST                   __attribute__((const))
#define PURE                    __attribute__((pure))
#define UNUSED                  __attribute__((unused))
#define MALLOCLIKE              __attribute__((malloc))
#define FORMATARG(fmt)          __attribute__((format_arg(fmt)))
#define NONNULL(...)            __attribute__((nonnull(__VA_ARGS__)))
#define likely(x)               __builtin_expect(!!(x), 1)
#define unlikely(x)             __builtin_expect(!!(x), 0)
#define compile_constant(x)     __builtin_constant_p(x)
#if defined(NDEBUG) && !defined(inline)
    #define inline		__attribute__((always_inline)) inline
#endif
#ifdef __cplusplus
    #define _Alignas(grain)	alignas(grain)
    #define _Noreturn		__attribute__((noreturn))
#else
    #define noexcept		__attribute__((nothrow))
    #define constexpr		CONST
#endif

// Various clang quirks
#if __clang__
    #define atomic_exchange(o,v)	__c11_atomic_exchange(o,v,__ATOMIC_SEQ_CST)
#else
    #include <stdatomic.h>
#endif
